ANGULAR Workshop 28.06.2017

-- Links -----
https://github.com/manfredsteyer/2017_06_28/
https://goo.gl/7nse3V


Browser DOM Properties
Browser DOM Events
https://www.w3schools.com/jsref/dom_obj_event.asp
[disabled] vom Browser
[(ngModel)] Angular


Debugging im HTML möglich. Sourcemap wird bereitgestellt.
z.B. *ngFor Schleife


START
mit Angular CLI

package.json
Skripte zum Start, Testserver, etc.


index.html
Hauptkomponente wird gebootstrapt, zum Start der Anwendung

main.ts

app.component.html
componet noch hinzufügen

Snippets:
a-comp a.comp
Angular V4 Typescript Snippet

number int od. double schizophrenste Datentyp überhaupt

Module registrieren
app.modules
import und dann
declarations

--------------------------------------------------------------
Service sind Klassen, werden an Token gebunden.


Service Provider
Objekt das Token auf Service anbietet (Abb. FlugService rot)

Module können in Service schreiben und lesen

Service gilt pro Komponente und darunter (Komponentenbaum)


gleiche Service kann aber auch für andere Komponente geleten

Konstanten
Dekorator @inject wenn Datentyp nicht der Token ist


Pipes
{{VON | Ort: 'S': 'E'}}
value	     param1 param2

registrieren unter modules

Pipes und Components werden deklariert (unter declarations)

Module
BrowserModule importiert CommonModule

--
ng build --prod (optimierte Prod.Version ohne Kommentare, whitespace, etc 
--> landet im Dist Ordner --> ab auf Webserver


-- Unit Testing
npm test
npm test -- --code -coverage

-- End 2 Testing
Locator:
Auf Elemt Buttoneingabe testen
Auf Buttoninhalt testen

element(by.css("button")) Button
element(by.css(".x"))	Klasse
element(by.css("#x"))	Id

Ausführen: npm run e2e


// FORMULARE

ngModel 2WayDataBinding: Properties aus Komponente werden abgebildet

valid: Formulare als ganzes validiert, korrekt validiert

Angular erzeugt Objektgraph

<div *ngIf="!f?.controls?.von?.valid">
Save Exit Operator
?: vermeiden, dass Prüfung in NullpointerException läuft


<div *ngIf="!f?.controls?.von?.hasError('required')">
Errorrückgabe wenn required nicht erfüllt

Standard-Valdidatoren:
required
minlength
maxlength
patern

(ab angular 4):
email 
min
max
email

Stylesheet in der Komponente gelten nur für Komponente isoliert
Alternative zentrales Stylesheet --> angularcli.json
encapsulation: ViewEncapsulation.None ---> bindet Stylesheet zentral ein

Input Validator Direktive
a-directive shortcut


--------------------------

Routing
nur für Hauptmodul: forRoot
für featureModul: forChild
direkter Aufruf des Features möglich, da eine eigene URL

Strg+Shift+B















